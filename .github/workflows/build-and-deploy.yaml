name: CI

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

env:
  REGISTRY: registry.digitalocean.com/my-container-registry
  IMAGE_NAME: meeting-summarizer

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Check if Dockerfile exists
        run: test -f Dockerfile || { echo "Dockerfile not found"; exit 1; }

      - name: Create .env file
        run: |
          touch .env
          echo DB_HOSTNAME=${{ secrets.DB_HOSTNAME }} >> .env 
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env 
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PWD=${{ secrets.DB_PWD }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env

      - name: Build container image
        run: docker build -t $REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 3600

      - name: Remove all old images
        run: |
          if doctl registry repository list | grep -q $IMAGE_NAME; then
            doctl registry repository delete-manifest $IMAGE_NAME $(doctl registry repository list-tags $IMAGE_NAME | grep -o "sha.*") --force
          else
            echo "No repository found"
          fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $IMAGE_NAME || true
            # Remove old container
            docker rm $IMAGE_NAME || true
            # Run a new container from a new image
            docker run -d \
            -p 8001:8001 \
            --restart always \
            --name $IMAGE_NAME \
            $REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)